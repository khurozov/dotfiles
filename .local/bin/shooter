#!/usr/bin/env bash

set -eo pipefail

ifinstalled slurp grim hyprctl jq wl-copy imgbb

help_opt() {
    echo -e "shooter: take screenshot and copy/save/upload

usage: shooter [-m MODE] [(-o OUTPUT | -)]

MODE => selection mode
    region      select region freely \e[3m(default)\e[0m
    window      select a window
    display     select a monitor
    full        fullscreen screenshot

OUTPUT => what to do with screenshot?
    copy        copy to clipboard \e[3m(default)\e[0m
    upload      upload to ImgBB \e[3m(uses imgbb script)\e[0m
    pipe        pipe raw image data to stdout
    <path>      save to a file with given path

- => shorthand for '-o pipe'
    "
}

if [ "$1" = "--help" ]; then
    help_opt
    exit 0
fi

# defaults
MODE=region
COPY=0
UPLOAD=0
FILE=""
PIPE=0

parse_mode() {
    case "$1" in
        region|window|display|full)
            MODE="$1"
            ;;
        *)
            echo "Incorrect mode $1"
            help_opt
            exit 1
            ;;
    esac
}

parse_output() {
    case "$1" in
        copy)   COPY=1;;
        upload) UPLOAD=1;;
        pipe)   PIPE=1;;
        *)      FILE="$1";;
    esac
}

grab_region() {
    slurp -d
}

grab_window() {
    local workspaces windows
    workspaces="$(hyprctl monitors -j | jq -r 'map(.activeWorkspace.id) | join(",")')"
    windows="$(hyprctl -j clients | jq -r '[.[] | select(.workspace.id | contains('"$workspaces"'))]')"
    echo "$windows" | jq -r '.[] | "\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"' | slurp -r
}

grab_display() {
    slurp -o
}

gg() {
    if [ -z "$GEOMETRY" ]; then
        grim "$@"
    else
        grim -g "$GEOMETRY" "$@"
    fi
}

n=0;
while getopts m:o: OPT; do
    n=$((n + 2))
    case $OPT in
        m)
            parse_mode "$OPTARG"
            ;;
        o)
            parse_output "$OPTARG"
            ;;
        *)
            echo "Invalid arguments $*"
            help_opt
            exit 2
            ;;
    esac
done

shift $n
if [ $# -ne 0 ]; then
    if [ $# -eq 1 ] && [ "$1" = "-" ] && [ -z "$FILE" ] && [ $COPY -eq 0 ] && [ $UPLOAD -eq 0 ]; then
        PIPE=1
    else
        echo "Invalid arguments $*"
        help_opt
        exit 2
    fi
else
    [ -z "$FILE" ] && [ $UPLOAD -eq 0 ] && [ $PIPE -eq 0 ] && COPY=1
fi

case $MODE in
    region)     GEOMETRY="$(grab_region)";;
    window)     GEOMETRY="$(grab_window)";;
    display)    GEOMETRY="$(grab_display)";;
    full)       GEOMETRY="";;
esac

[ -z "$GEOMETRY" ] && [ "$MODE" != "full" ] && exit 1

if [ $COPY -eq 1 ]; then
    gg - | wl-copy -t image/png
elif [ $UPLOAD -eq 1 ]; then 
    gg - | imgbb -
elif [ $PIPE -eq 1 ]; then 
    gg -
else
    gg -- "$FILE"
fi
